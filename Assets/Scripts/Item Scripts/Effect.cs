//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Xml.Serialization;


namespace AssemblyCSharp
{
	public enum EffectTypes
	{
		Weaken,
		Strengthen,
		HealthDrain
	}

	public enum DamageEffectType
	{
		Acid,
		Poison,
		Fire,
		Vamparitic
	}

	public enum PeriodTypes
	{
		OnGoing,
		EffectOverTime
	}

	[XmlRoot("Effect")]
	public class Effect
	{
		[XmlElement("EffectType")]
		public EffectTypes EffectType
		{
			get;
			set;
		}

		[XmlElement("PeriodType")]
		public PeriodTypes PeriodType
		{
			get;
			set;
		}

		[XmlElement("Rounds")]
		public int Rounds
		{
			get;
			set;
		}

		[XmlElement("AttributeType")]
		public AttributeTypes AttributeType
		{
			get;
			set;
		}

		// Health damage or stat weaken
		[XmlElement("EffectValue")]
		public int EffectValue
		{
			get;
			set;
		}

		[XmlElement("EffectOverTime")]
		public DamageEffectType EffectOverTime
		{
			get;
			set;
		}

		public Effect ()
		{
		}

		/// <summary>
		/// Creates a new effect that is a health drain.
		/// </summary>
		/// <param name="damage">Damage.</param>
		/// <param name="rounds">Rounds.</param>
		/// <param name="effectOT">Type of effect fire, poison.</param>
		public Effect (int damage, int rounds, DamageEffectType effectOT)
		{
			EffectValue = damage;
			EffectType = EffectTypes.HealthDrain;
			PeriodType = PeriodTypes.EffectOverTime;
			EffectOverTime = effectOT;
			Rounds = rounds;
		}

		/// <summary>
		/// Creates a new effect that increases or decreases a specified stat or skill over time.
		/// </summary>
		/// <param name="effectType">Effect type.</param>
		/// <param name="attributeType">Attribute type.</param>
		/// <param name="rounds">Rounds.</param>
		public Effect (EffectTypes effectType, AttributeTypes attributeType, int rounds, int effectValue)
		{
			EffectType = effectType;
			AttributeType = attributeType;
			PeriodType = PeriodTypes.EffectOverTime;
			Rounds = rounds;
			EffectValue = effectValue;
		}

		/// <summary>
		/// Creates an on going effect that increases or decreases a specified stat or skill
		/// </summary>
		/// <param name="effectType">Effect type.</param>
		/// <param name="attributeType">Attribute type.</param>
		public Effect (EffectTypes effectType, AttributeTypes attributeType, int effectValue)
		{
			EffectType = effectType;
			AttributeType = attributeType;
			PeriodType = PeriodTypes.OnGoing;
			Rounds = -1;
			EffectValue = effectValue;
		}
	}
}

